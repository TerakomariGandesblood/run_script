var N=null,E="",T="t",U="u",searchIndex={};
var R=["run_script","scripterror","scriptoptions","result","Holds the error information","ScriptError","Error struct","ScriptOptions","Options available for invoking the script","IoOptions","run_script::types","try_from","try_into","borrow_mut","type_id","to_owned","clone_into","iooptions","formatter","ErrorInfo"];

searchIndex["run_script"]={"doc":R[0],"i":[[5,"run",R[0],"Invokes the provided script content and returns the…",N,[[[R[2]],["str"],["vec"]],[[R[3],[R[1]]],[R[1]]]]],[5,"spawn",E,"Invokes the provided script content and returns a process…",N,[[[R[2]],["str"],["vec"]],[["child"],[R[3],["child",R[1]]],[R[1]]]]],[0,"types",E,"types",N,N],[3,R[5],R[10],R[6],N,N],[12,"info",E,R[4],0,N],[3,R[7],E,R[8],N,N],[12,"runner",E,"Defines the requested runner (defaults to cmd in windows…",1,N],[12,"input_redirection",E,"Default is IoOptions::Inherit",1,N],[12,"output_redirection",E,"Default is IoOptions::Pipe (only pipe enables to capture…",1,N],[12,"exit_on_error",E,"Sets -e flag. Will exit on any error while running the…",1,N],[12,"print_commands",E,"Sets -x flag for printing each script command before…",1,N],[4,R[19],E,R[4],N,N],[13,"IOError",E,"Root error",2,N],[13,"Description",E,"Description text of the error reason",2,N],[4,R[9],E,"Options available for IO",N,N],[13,"Null",E,"Corresponds to Stdio::null()",3,N],[13,"Pipe",E,"Corresponds to Stdio::pipe()",3,N],[13,"Inherit",E,"Corresponds to Stdio::inherit()",3,N],[11,"new",E,"Returns new instance",1,[[],[R[2]]]],[6,R[5],R[0],R[6],N,N],[6,R[7],E,R[8],N,N],[6,R[9],E,"Io Options available for invoking the script",N,N],[14,R[0],E,"Enables to invoke the run_script::run function more easily…",N,N],[14,"spawn_script",E,"Enables to invoke the run_script::spawn function more…",N,N],[11,"from",R[10],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,"to_string",E,E,0,[[["self"]],["string"]]],[11,R[11],E,E,0,[[[U]],[R[3]]]],[11,R[12],E,E,0,[[],[R[3]]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],["typeid"]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[3]]]],[11,R[12],E,E,1,[[],[R[3]]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],["typeid"]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[[U]],[R[3]]]],[11,R[12],E,E,2,[[],[R[3]]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],["typeid"]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[[T],["self"]]]],[11,R[11],E,E,3,[[[U]],[R[3]]]],[11,R[12],E,E,3,[[],[R[3]]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],["typeid"]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"eq",E,E,1,[[[R[2]],["self"]],["bool"]]],[11,"ne",E,E,1,[[[R[2]],["self"]],["bool"]]],[11,"eq",E,E,3,[[[R[17]],["self"]],["bool"]]],[11,"clone",E,E,1,[[["self"]],[R[2]]]],[11,"clone",E,E,3,[[["self"]],[R[17]]]],[11,"fmt",E,"Formats the value using the given formatter.",0,[[[R[18]],["self"]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,2,[[[R[18]],["self"]],[R[3]]]],[11,"fmt",E,E,0,[[[R[18]],["self"]],[R[3]]]],[11,"fmt",E,E,1,[[[R[18]],["self"]],[R[3]]]],[11,"fmt",E,E,3,[[[R[18]],["self"]],[R[3]]]],[11,"description",E,"A short description of the error.",0,[[["self"]],["str"]]],[11,"cause",E,"The lower-level cause of this error, if any.",0,[[["self"]],[["option",["error"]],["error"]]]]],"p":[[3,R[5]],[3,R[7]],[4,R[19]],[4,R[9]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);